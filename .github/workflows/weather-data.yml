name: Run Weather Script and Push Changes to Repository

# Using Cron tool to schedule the running of the weather.sh script
on:
  schedule:
    - cron: '0 10 * * *' # Runs the weather.sh script every day at 10:00 AM UTC
  workflow_dispatch: # Allows me to trigger the script to start manually

# Allow write permissions to push changes from GitHub Actions to my Repository  
permissions:
  contents: write 

# GitHub Action's 1 job with some steps  
jobs:
# This workflow's job is to Run the weather.sh script & push changes back to repo
  run-weather-script:
    runs-on: ubuntu-latest # Using the latest Ubuntu runner

    # Step 1: Check out (clone) the repository to make changes to it 
    steps:
    # Step 1: Check out the repository
    - name: Check out the repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x  # Replace with your required Python version, e.g., 3.9

    # Step 3: Install requirements from requirements.txt & make sure the most up to date version of pip is installed 
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Make the weather.sh script executable and run it
    # `chmod +x` makes weather.sh executable to all users 
    - name: Make weather.sh executable and run it
      run: |
        chmod +x weather.sh 
        ./weather.sh

    # Step 5: Configure git for pushing changes
    - name: Configure git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    # Step 6: Commit changes and push changes to my repository
    - name: Commit and push changes
      run: |
        git add .
        git commit -m "Automated update by GitHub Actions"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
